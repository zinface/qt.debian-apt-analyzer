############################### Deepin 20
# zinface@zinface-PC:~$ cat /etc/apt/sources.list
# ## Generated by deepin-installer
# deb https://community-packages.deepin.com/deepin/ apricot main contrib non-free
# deb-src https://community-packages.deepin.com/deepin/ apricot main contrib non-free

############################### UOS kirin 990
# test@test-PC:/tmp/debs$ cat /etc/apt/sources.list
# ## Generated by deepin-installer
# deb [by-hash=force] https://professional-packages.chinauos.com/desktop-professional eagle/sp2 main contrib non-free
# deb-src [by-hash=force] https://professional-packages.chinauos.com/desktop-professional eagle/sp2 main contrib non-free

# #deb [by-hash=force] http://uos-packages.deepin.com/uos eagle main contrib non-free
# #deb [by-hash=force] http://uos.package.chanauos.com/uos eagle main contrib non-free


###############################  Deepin 23
# zinface@zinface-PC:~/Desktop$ cat /etc/apt/sources.list
# ## Generated by deepin-installer
# deb https://proposed-packages.deepin.com/dde-nightly/ bullseye main contrib non-free
# deb https://proposed-packages.deepin.com/dde-nightly/ deepin-bullseye main contrib non-free
# deb https://proposed-packages.deepin.com/dde-nightly/ dde-bullseye main contrib non-free
# deb https://proposed-packages.deepin.com/dde-nightly/ deepin-wine main contrib non-free
# #deb-src https://proposed-packages.deepin.com/dde-nightly/ bullseye main contrib non-free



###############################
# http://archive.kylinos.cn/kylin/KYLIN-ALL/
# 目录：dists/
# 目录：pool/
# 软件源使用方法
# 在系统的/etc/apt/sources.list文件中，根据不同版本填入以下内容
# #4.0.2桌面版本:
# deb http://archive.kylinos.cn/kylin/KYLIN-ALL 4.0.2-desktop main restricted universe multiverse
# #4.0.2-sp1桌面版本:
# deb http://archive.kylinos.cn/kylin/KYLIN-ALL 4.0.2sp1-desktop main restricted universe multiverse
# #4.0.2-sp2桌面版本:
# deb http://archive.kylinos.cn/kylin/KYLIN-ALL 4.0.2sp2-desktop main restricted universe multiverse
# #4.0.2服务器版本:
# deb http://archive.kylinos.cn/kylin/KYLIN-ALL 4.0.2-server main restricted universe multiverse
# #4.0.2-sp1服务器版本:
# deb http://archive.kylinos.cn/kylin/KYLIN-ALL 4.0.2sp1-server main restricted universe multiverse
# #4.0.2-sp2服务器版本:
# deb http://archive.kylinos.cn/kylin/KYLIN-ALL 4.0.2sp2-server main restricted universe multiverse
# #4.0.2-sp2 FT2000+服务器版本:
# deb http://archive.kylinos.cn/kylin/KYLIN-ALL 4.0.2sp2-server-ft2000 main restricted universe multiverse
# #4.0.2-sp3桌面版本:
# deb http://archive.kylinos.cn/kylin/KYLIN-ALL 4.0.2sp3-desktop main restricted universe multiverse
# #4.0.2-sp3服务器版本:
# deb http://archive.kylinos.cn/kylin/KYLIN-ALL 4.0.2sp3-server main restricted universe multiverse
# #4.0.2-sp4桌面版本:
# deb http://archive.kylinos.cn/kylin/KYLIN-ALL 4.0.2sp4 main restricted universe multiverse
# #10.0版本:
# deb http://archive.kylinos.cn/kylin/KYLIN-ALL 10.0 main restricted universe multiverse
# #10.1版本:
# deb http://archive.kylinos.cn/kylin/KYLIN-ALL 10.1 main restricted universe multiverse



import json
import os
import requests

def getContent(url):
    return requests.get(url).content


# 起源, 标签, 代号, 版本, 日期, 架构, 组件成份, 简介
# Origin: Linux Deepin
# Label: Deepin
# Codename: apricot
# Version: 2019
# Date: Tue, 18 Jan 2022 09:36:49 UTC
# Architectures: i386 amd64 arm64 mips64el
# Components: main contrib non-free
# Description: Deepin debian packages
class Release:
    content = ""

    def __init__(self, url):
        self.content = getContent(url).decode("utf-8")
    
    def getOrigin(self):
        for i in str(self.content).split("\n"):
            if str(i).startswith("Origin"):
                return i[len("Origin: "):]
        return ""
    def getLabel(self):
        for i in str(self.content).split("\n"):
            if str(i).startswith("Label"):
                return i[len("Label: "):]
        return ""
    def getCodename(self):
        for i in str(self.content).split("\n"):
            if str(i).startswith("Codename"):
                return i[len("Codename: "):]
        return ""
    def getVersion(self):
        for i in str(self.content).split("\n"):
            if str(i).startswith("Version"):
                return i[len("Version: "):]
        return ""
    def getDate(self):
        for i in str(self.content).split("\n"):
            if str(i).startswith("Date"):
                return i[len("Date: "):]
        return ""
    def getArchitectures(self):
        for i in str(self.content).split("\n"):
            if str(i).startswith("Architectures"):
                return i[len("Architectures: "):]
        return ""
    def getComponents(self):
        for i in str(self.content).split("\n"):
            if str(i).startswith("Components"):
                return i[len("Components: "):]
        return ""
    def getDescription(self):
        for i in str(self.content).split("\n"):
            if str(i).startswith("Description"):
                return i[len("Description: "):]
        return ""


class Distribution:
    prefix = ""
    dist = ""
    code = ""

    def __init__(self, prefix, dist, code):
        self.prefix, self.dist, self.code = prefix, dist, code

    def dists(self):
        return os.path.join(os.path.join(self.prefix, self.dist), "dists")

    def distsInRelease(self):
        return os.path.join(os.path.join(self.dists(), self.code), 'InRelease')

    def distsRelease(self):
        return os.path.join(os.path.join(self.dists(), self.code), 'Release')

    def getDistsContent(self):
        return getContent(self.dists())

    def getDistsInReleaseContent(self):
        return getContent(self.distsInRelease())

    def getDistsReleaseContent(self):
        return getContent(self.distsRelease())

    def getRelease(self):
        return Release(self.distsRelease())

# https://proposed-packages.deepin.com/dde-nightly/dists/bullseye/Release
# https://proposed-packages.deepin.com/dde-nightly/dists/bullseye




def generate(filename, sources):
    with open(filename, 'w') as f:
        _json = []
        for i in sources:
            _urltmp = str(i).split(" ")[0]
            if _urltmp[-1] == "/":
                _urltmp = _urltmp[:-1]

            _dist = os.path.basename(_urltmp)
            _url = _urltmp[:_urltmp.rfind(_dist)]
            _codename = str(i).split(" ")[1]

            _item = {}
            _item['url'] = _url
            _item['dist'] = _dist
            _item['codename'] = _codename
            _item['release_url'] = Distribution(_url, _dist, _codename).distsRelease()
            try:
                _relese = Distribution(_url, _dist, _codename).getRelease()
                _item['relese'] = {}

                _item['relese']['origin'] = _relese.getOrigin()
                _item['relese']['label'] = _relese.getLabel()
                _item['relese']['codename'] = _relese.getCodename()
                _item['relese']['version'] = _relese.getVersion()
                _item['relese']['date'] = _relese.getDate()
                _item['relese']['architectures'] = _relese.getArchitectures()
                _item['relese']['components'] = _relese.getComponents()
                _item['relese']['description'] = _relese.getDescription()
                _json.append(_item)
            except:
                pass
            # print(Distribution(_url, _dist, _codename).distsRelease())
        f.write(json.dumps(_json))
        f.flush()

if __name__ == "__main__":
    # nightly = Distribution("http://archive.kylinos.cn/kylin", "KYLIN-ALL", "4.0.2")
    # nightly = Distribution("https://community-packages.deepin.com", "deepin", "apricot")
    # print(nightly.distsRelease())

    sourcelist = [
        "https://community-packages.deepin.com/deepin/ apricot main contrib non-free",
        # "https://professional-packages.chinauos.com/desktop-professional eagle/sp2 main contrib non-free",
        "http://uos-packages.deepin.com/uos eagle main contrib non-free",
        "http://uos.package.chanauos.com/uos eagle main contrib non-free",
        "http://archive.kylinos.cn/kylin/KYLIN-ALL 4.0.2-desktop main restricted universe multiverse",
        "http://archive.kylinos.cn/kylin/KYLIN-ALL 4.0.2sp1-desktop main restricted universe multiverse",
        "http://archive.kylinos.cn/kylin/KYLIN-ALL 4.0.2sp2-desktop main restricted universe multiverse",
        "http://archive.kylinos.cn/kylin/KYLIN-ALL 4.0.2-server main restricted universe multiverse",
        "http://archive.kylinos.cn/kylin/KYLIN-ALL 4.0.2sp1-server main restricted universe multiverse",
        "http://archive.kylinos.cn/kylin/KYLIN-ALL 4.0.2sp2-server main restricted universe multiverse",
        "http://archive.kylinos.cn/kylin/KYLIN-ALL 4.0.2sp2-server-ft2000 main restricted universe multiverse",
        "http://archive.kylinos.cn/kylin/KYLIN-ALL 4.0.2sp3-desktop main restricted universe multiverse",
        "http://archive.kylinos.cn/kylin/KYLIN-ALL 4.0.2sp3-server main restricted universe multiverse",
        "http://archive.kylinos.cn/kylin/KYLIN-ALL 4.0.2sp4 main restricted universe multiverse",
        "http://archive.kylinos.cn/kylin/KYLIN-ALL 10.0 main restricted universe multiverse",
        "http://archive.kylinos.cn/kylin/KYLIN-ALL 10.1 main restricted universe multiverse",
        "https://proposed-packages.deepin.com/dde-nightly/ bullseye main contrib non-free",
        "https://proposed-packages.deepin.com/dde-nightly/ deepin-bullseye main contrib non-free",
        "https://proposed-packages.deepin.com/dde-nightly/ dde-bullseye main contrib non-free",
        "https://proposed-packages.deepin.com/dde-nightly/ deepin-wine main contrib non-free",
        "http://packages.microsoft.com/repos/code stable main"
    ]

    generate("resource.json", sourcelist)

